---
groups:
- name: main
  jobs:
  - install
  - test
  - build-docker-image
  - build-artifact
  - deploy-job
 
resource_types:
- name: artifactory 
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource
 
resources:
- name: myapp
  type: git
  source:
    uri: https://github.com/vc4017/myapp.git
    branch: master

- name: cf-env
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: tovenki.ch@gmail.com
    password: Venki@521
    organization: concourse-node.js app
    space: deployment
    skip_cert_check: true

- name: docker-image
  type: docker-image
  source:
    email: tovenki.ch@gmail.com
    username: venki521
    password: venki@521
    repository: venki521/dockerimage

- name: uaa-build
  type: artifactory
  source:
    endpoint: http://172.17.13.59:8081/artifactory
    repository: "/example-repo-local/myapp"
    username: admin
    password: venki@521
    skip_ssl_verification: true

jobs:
 
- name: install
  serial: true
  disable_manual_trigger: false
  plan:
      - get: myapp
        trigger: true

      - task: npm-install
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: node, tag: "6" }
          inputs:
            - name: myapp
              path: .
          run:
            path: npm
            args: [ install ]

- name: test
  serial: true
  disable_manual_trigger: false
  plan:
      - get: myapp
        trigger: true
        passed:
           - install
      - task: npm-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: node, tag: "6" }
          inputs:
            - name: myapp
              path: .
          run:
            path: npm
            args: [ test ]

- name: build-docker-image
  public: true
  serial: true
  plan:
  - get: myapp
    trigger: true
    passed:
       - test
  - put: docker-image
    params:
      build: myapp

- name: build-artifact       
  plan:
  - get: myapp
    trigger: true
    passed:
       - build-docker-image
  - task: build
    config:
      platform: linux
      inputs:
      - name: myapp
      outputs:
      - name: uaa_war
      image_resource:
        type: docker-image
        source: { repository: venki521/dockerimage }
      run:
        path: sh
        args:
        - -exc
        - |
          export TERM=dumb
          cd myapp
          npm pack
          mv ./myapp-*.tgz ../uaa_war
  - put: uaa-build
    params:
      file: uaa_war/myapp-*.tgz

- name: deploy-job
  serial: true
  plan:
  - get: uaa-build
    trigger: true
    passed:
      - build-artifact
  - put: cf-env
    params:
      manifest: myapp/manifest.yml
      path: myapp